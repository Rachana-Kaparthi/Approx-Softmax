from operator import*
def softmax (x):
    wid_int = 5
    wid_MSB1 = 4
    wid_MSB2 = 4
    wid_LSB = 8
    
    x_int = x[0:5]
    x_msb1=x[5:9]
    x_msb2=x[9:13]
    x_lsb=x[13:16]
    
    exp_int= ["00010000000000000000",
    "00010000000000000100",
    "00010000000000001010",
    "00010000000000011101",
    "00010000000001010001",
    "00010000000011011100",
    "00010000001001011000",
    "00010000011001011111",
    "00010001000101010010",
    "00010010111100010110",
    "00001000000000000000",
    "00101010110111110011",
    "00111110110001110010",
    "01011010000010110000",
    "01101101101001100100",
    "10001001010001101001",
    "10011100100110110110",
    "10111000100100010100",
    "11001011101001001111",
    "11011111110100111000",
    "11111010110000010100"]
    
    exp_MSB1 = ["00100100000000000000",
    "00100100010000100000",
    "00100100100010000101",
    "00100100110100110010",
    "00100101001000101101",
    "00100101011101111010",
    "00100101110100011110",
    "00100110001100100000",
    "00100110100110000100",
    "00100111000001010010",
    "00100111011110010001",
    "00100111111101000111",
    "00101000011101111100",
    "00101001000000111001",
    "00101001100110000111",
    "00101010001101101110"]
    
    exp_MSB2 =  ["00011000000000000000",
    "00011000000010000000",
    "00011000000100000001",
    "00011000000110000010",
    "00011000001000000100",
    "00011000001010000110",
    "00011000001100001001",
    "00011000001110001100",
    "00011000010000010000",
    "00011000010010010100",
    "00011000010100011001",
    "00011000010110011110",
    "00011000011000100100",
    "00011000011010101010",
    "00011000011100110001",
    "00011000011110111001"]

    
    exp_LSB = [
    "00011000000000000000",
    "00011000000000010000",
    "00011000000000100000",
    "00011000000000110000",
    "00011000000001000000",
    "00011000000001010000",
    "00011000000001100000",
    "00011000000001110000"]

    
    j = {"11010": 1,
    "11001": 2,
    "11000": 3,
    "10111": 4,
    "10110": 5,
    "10101": 6,
    "10100": 7,
    "10011": 8,
    "10010": 9,
    "10001": 10,
    "00000": 11,
    "00001": 12,
    "00010": 13,
    "00011": 14,
    "00100": 15,
    "00101": 16,
    "00110": 17,
    "00111": 18,
    "01000": 19,
    "01001": 20,
    "01010": 21}.get(x_int, 0)

    ans_int = exp_int[j-1]
    
    print("ans_int",ans_int)
    
    k = {"0000": 1,
    "0001": 2,
    "0010": 3,
    "0011": 4,
    "0100": 5,
    "0101": 6,
    "0110": 7,
    "0111": 8,
    "1000": 9,
    "1001": 10,
    "1010": 11,
    "1011": 12,
    "1100": 13,
    "1101": 14,
    "1110": 15,
    "1111": 16}.get(x_msb1, 0)
    
    ans_msb1= exp_MSB1[k-1]
    print("ans_msb1",ans_msb1)

    m = {"0000": 1,
    "0001": 2,
    "0010": 3,
    "0011": 4,
    "0100": 5,
    "0101": 6,
    "0110": 7,
    "0111": 8,
    "1000": 9,
    "1001": 10,
    "1010": 11,
    "1011": 12,
    "1100": 13,
    "1101": 14,
    "1110": 15,
    "1111": 16}.get(x_msb2, 0)
    
    ans_msb2= exp_MSB2[m-1]
    print("ans_msb2",ans_msb2)

    n = {"000": 1,
    "001": 2,
    "010": 3,
    "011": 4,
    "100": 5,
    "101": 6,
    "110": 7,
    "111": 8}.get(x_lsb, 0)
    
    ans_lsb = exp_LSB[n-1]
    print("ans_lsb",ans_lsb)
    
    position1 = (32-(int(ans_int[0:4],2) + int(ans_msb1[0:4],2))-16) if (32-(int(ans_int[0:4],2) + int(ans_msb1[0:4],2))  > 16 ) else 0
                    
    position2 = ( 16+position1-int(ans_msb2[0:4],2) -16) if ( 16+position1-int(ans_msb2[0:4],2) >16) else 0
    
    position3 = (16+position2-int(ans_lsb[0:4],2) -16) if (16+position2-int(ans_lsb[0:4],2) >16) else 0
    
    position = (16-position3) if position3 < 16 else 0
    # print(bin(mul(int(num1,2),int(num2,2))))
    prod_1 = bin(mul(int(ans_int[4:],2),int(ans_msb1[4:],2)))[2:18]
    print("prod_1", prod_1)
    prod_2 = bin(mul(int(prod_1,2),int(ans_msb2[4:],2)))[2:18]
    print("prod_2", prod_2)
    prod_3= bin(mul(int(prod_2,2),int(ans_lsb[4:],2)))[2:18]
    print("prod_3", prod_3)
    # print ("prod_3",prod_3)
    print("pos",format(position, '05b'))
    print("exponent",format(position, '05b')+prod_3)
    return [format(position, '05b')+prod_3]


# y=softmax("0101011010110110")



    
